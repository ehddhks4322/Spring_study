/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-06-17 07:20:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login_005finsert;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("	<title>로그인</title>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"resources/css/login_form.css\">\r\n");
      out.write("	<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n");
      out.write("	<script src=\"resources/js/httpRequest.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function login(f){  \r\n");
      out.write("			var id = f.m_id.value;\r\n");
      out.write("			var pw = f.m_pw.value;\r\n");
      out.write("			\r\n");
      out.write("			 \r\n");
      out.write("			if(id == ''){\r\n");
      out.write("				swal(\"로그인 불가!!\",\"아이디를 입력해주세요!!\",\"warning\");                     \r\n");
      out.write("				\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if(pw == ''){\r\n");
      out.write("				swal(\"로그인 불가!!\",\"비밀번호를 입력해주세요!!\",\"warning\");\r\n");
      out.write("		\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			var url = \"login.do\";\r\n");
      out.write("			var param = \"id=\"+id+\"&pw=\"+pw;\r\n");
      out.write("			\r\n");
      out.write("			sendRequest(url,param,m_check,\"POST\");\r\n");
      out.write("		\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function m_check(){\r\n");
      out.write("			if(xhr.readyState == 4 && xhr.status == 200){\r\n");
      out.write("				var data = xhr.responseText;\r\n");
      out.write("				var json = (new Function('return'+data))();\r\n");
      out.write("				\r\n");
      out.write("				if(json[0].result == 'no_id'){\r\n");
      out.write("					swal(\"아이디가 존재하지 않습니다!\",\"다시 확인 후 로그인 하세요!\",\"warning\");\r\n");
      out.write("				} else if(json[0].result == 'no_pw'){\r\n");
      out.write("					swal(\"비밀번호가 일치하지 않습니다!\",\"다시 확인 후 로그인 하세요!\",\"warning\");\r\n");
      out.write("				} else {\r\n");
      out.write("					swal({\r\n");
      out.write("					    title: \"로그인 성공!\",\r\n");
      out.write("					    icon: \"success\",\r\n");
      out.write("					    buttons: {\r\n");
      out.write("					      confirm: {\r\n");
      out.write("					        text: \"확인\",\r\n");
      out.write("					        value: true,\r\n");
      out.write("					        visible: true,\r\n");
      out.write("					        className: \"\",\r\n");
      out.write("					        closeModal: true\r\n");
      out.write("					      }\r\n");
      out.write("					    }\r\n");
      out.write("					  }).then(function() {\r\n");
      out.write("					    location.href = \"main.do\";\r\n");
      out.write("					  });\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		<div class=\"container\"\r\n");
      out.write("			style=\"background-image: url('resources/img/main_img1.png'); background-size: cover;\">\r\n");
      out.write("			<div class=\"inside\">\r\n");
      out.write("				<div class=\"xbtn\" onclick=\"location.href='start.do'\"\r\n");
      out.write("					style=\"cursor: pointer;\"></div>\r\n");
      out.write("				<h1>Login</h1>\r\n");
      out.write("				<form action=\"\" method=\"post\">\r\n");
      out.write("					<div class=\"login_form\">\r\n");
      out.write("						 <input type=\"text\" id=\"m_id\" name=\"m_id\" placeholder=\"아이디\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"login_form\">\r\n");
      out.write("						<input type=\"password\" id=\"m_pw\" name=\"m_pw\" placeholder=\"비밀번호\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"login_form\">\r\n");
      out.write("						<input type=\"button\" class=\"login_btn\" value=\"로그인\"\r\n");
      out.write("							onclick=\"login(this.form)\"> <br> <input type=\"button\"\r\n");
      out.write("							class=\"member_btn\" value=\"회원가입\"\r\n");
      out.write("							onclick=\"location.href='insert_first.do'\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
